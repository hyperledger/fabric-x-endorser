// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: platform/fabric/core/fabricx/committer/v2/protoqueryservice/query.proto

package protoqueryservice

import (
	protoblocktx "github.com/hyperledger/fabric-x-endorser/platform/fabricx/core/fabricx/committer/v2/protoblocktx"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsoLevel int32

const (
	IsoLevel_Serializable    IsoLevel = 0
	IsoLevel_RepeatableRead  IsoLevel = 1
	IsoLevel_ReadCommitted   IsoLevel = 2
	IsoLevel_ReadUncommitted IsoLevel = 3
)

// Enum value maps for IsoLevel.
var (
	IsoLevel_name = map[int32]string{
		0: "Serializable",
		1: "RepeatableRead",
		2: "ReadCommitted",
		3: "ReadUncommitted",
	}
	IsoLevel_value = map[string]int32{
		"Serializable":    0,
		"RepeatableRead":  1,
		"ReadCommitted":   2,
		"ReadUncommitted": 3,
	}
)

func (x IsoLevel) Enum() *IsoLevel {
	p := new(IsoLevel)
	*p = x
	return p
}

func (x IsoLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsoLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_enumTypes[0].Descriptor()
}

func (IsoLevel) Type() protoreflect.EnumType {
	return &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_enumTypes[0]
}

func (x IsoLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsoLevel.Descriptor instead.
func (IsoLevel) EnumDescriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{0}
}

type View struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *View) Reset() {
	*x = View{}
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{0}
}

func (x *View) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	View          *View                  `protobuf:"bytes,1,opt,name=view,proto3,oneof" json:"view,omitempty"`
	Namespaces    []*QueryNamespace      `protobuf:"bytes,2,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{1}
}

func (x *Query) GetView() *View {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *Query) GetNamespaces() []*QueryNamespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type Rows struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []*RowsNamespace       `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rows) Reset() {
	*x = Rows{}
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rows) ProtoMessage() {}

func (x *Rows) ProtoReflect() protoreflect.Message {
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rows.ProtoReflect.Descriptor instead.
func (*Rows) Descriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{2}
}

func (x *Rows) GetNamespaces() []*RowsNamespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type ViewParameters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defaults to serializable deferrable.
	IsoLevel      IsoLevel `protobuf:"varint,1,opt,name=iso_level,json=isoLevel,proto3,enum=protoqueryservice_rc_0_2.IsoLevel" json:"iso_level,omitempty"`
	NonDeferrable bool     `protobuf:"varint,2,opt,name=nonDeferrable,proto3" json:"nonDeferrable,omitempty"`
	// Zero => maximal value
	TimeoutMilliseconds uint64 `protobuf:"varint,3,opt,name=timeout_milliseconds,json=timeoutMilliseconds,proto3" json:"timeout_milliseconds,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ViewParameters) Reset() {
	*x = ViewParameters{}
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewParameters) ProtoMessage() {}

func (x *ViewParameters) ProtoReflect() protoreflect.Message {
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewParameters.ProtoReflect.Descriptor instead.
func (*ViewParameters) Descriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{3}
}

func (x *ViewParameters) GetIsoLevel() IsoLevel {
	if x != nil {
		return x.IsoLevel
	}
	return IsoLevel_Serializable
}

func (x *ViewParameters) GetNonDeferrable() bool {
	if x != nil {
		return x.NonDeferrable
	}
	return false
}

func (x *ViewParameters) GetTimeoutMilliseconds() uint64 {
	if x != nil {
		return x.TimeoutMilliseconds
	}
	return 0
}

type QueryNamespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NsId          string                 `protobuf:"bytes,1,opt,name=ns_id,json=nsId,proto3" json:"ns_id,omitempty"`
	Keys          [][]byte               `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryNamespace) Reset() {
	*x = QueryNamespace{}
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNamespace) ProtoMessage() {}

func (x *QueryNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNamespace.ProtoReflect.Descriptor instead.
func (*QueryNamespace) Descriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryNamespace) GetNsId() string {
	if x != nil {
		return x.NsId
	}
	return ""
}

func (x *QueryNamespace) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RowsNamespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NsId          string                 `protobuf:"bytes,1,opt,name=ns_id,json=nsId,proto3" json:"ns_id,omitempty"`
	Rows          []*Row                 `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowsNamespace) Reset() {
	*x = RowsNamespace{}
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowsNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowsNamespace) ProtoMessage() {}

func (x *RowsNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowsNamespace.ProtoReflect.Descriptor instead.
func (*RowsNamespace) Descriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{5}
}

func (x *RowsNamespace) GetNsId() string {
	if x != nil {
		return x.NsId
	}
	return ""
}

func (x *RowsNamespace) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Version       []byte                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{6}
}

func (x *Row) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Row) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Row) GetVersion() []byte {
	if x != nil {
		return x.Version
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP(), []int{7}
}

var File_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto protoreflect.FileDescriptor

var file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDesc = string([]byte{
	0x0a, 0x47, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x66, 0x61, 0x62, 0x72, 0x69,
	0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x78, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63, 0x5f,
	0x30, 0x5f, 0x32, 0x1a, 0x45, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63,
	0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x04, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72,
	0x63, 0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63,
	0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x22, 0x4f, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x73,
	0x12, 0x47, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63, 0x5f, 0x30, 0x5f, 0x32, 0x2e,
	0x52, 0x6f, 0x77, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x56, 0x69,
	0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x09,
	0x69, 0x73, 0x6f, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x63, 0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x49, 0x73, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x08, 0x69, 0x73, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6e, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x22, 0x57, 0x0a, 0x0d, 0x52, 0x6f, 0x77, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63, 0x5f, 0x30, 0x5f, 0x32,
	0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x47, 0x0a, 0x03, 0x52, 0x6f,
	0x77, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x58, 0x0a, 0x08,
	0x49, 0x73, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x55, 0x6e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x10, 0x03, 0x32, 0xd3, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63, 0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63, 0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x52,
	0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63, 0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x63, 0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63,
	0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x63,
	0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72,
	0x63, 0x5f, 0x30, 0x5f, 0x32, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x5f, 0x72, 0x63, 0x5f, 0x30, 0x5f,
	0x32, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x00, 0x42, 0x6e, 0x5a, 0x6c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x62, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x2d, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x2d, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x66, 0x73, 0x63, 0x78,
	0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x78, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescOnce sync.Once
	file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescData []byte
)

func file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescGZIP() []byte {
	file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescOnce.Do(func() {
		file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDesc), len(file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDesc)))
	})
	return file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDescData
}

var file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_goTypes = []any{
	(IsoLevel)(0),                 // 0: protoqueryservice_rc_0_2.IsoLevel
	(*View)(nil),                  // 1: protoqueryservice_rc_0_2.View
	(*Query)(nil),                 // 2: protoqueryservice_rc_0_2.Query
	(*Rows)(nil),                  // 3: protoqueryservice_rc_0_2.Rows
	(*ViewParameters)(nil),        // 4: protoqueryservice_rc_0_2.ViewParameters
	(*QueryNamespace)(nil),        // 5: protoqueryservice_rc_0_2.QueryNamespace
	(*RowsNamespace)(nil),         // 6: protoqueryservice_rc_0_2.RowsNamespace
	(*Row)(nil),                   // 7: protoqueryservice_rc_0_2.Row
	(*Empty)(nil),                 // 8: protoqueryservice_rc_0_2.Empty
	(*protoblocktx.Policies)(nil), // 9: protoblocktx_rc_0_2.Policies
}
var file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_depIdxs = []int32{
	1, // 0: protoqueryservice_rc_0_2.Query.view:type_name -> protoqueryservice_rc_0_2.View
	5, // 1: protoqueryservice_rc_0_2.Query.namespaces:type_name -> protoqueryservice_rc_0_2.QueryNamespace
	6, // 2: protoqueryservice_rc_0_2.Rows.namespaces:type_name -> protoqueryservice_rc_0_2.RowsNamespace
	0, // 3: protoqueryservice_rc_0_2.ViewParameters.iso_level:type_name -> protoqueryservice_rc_0_2.IsoLevel
	7, // 4: protoqueryservice_rc_0_2.RowsNamespace.rows:type_name -> protoqueryservice_rc_0_2.Row
	2, // 5: protoqueryservice_rc_0_2.QueryService.GetRows:input_type -> protoqueryservice_rc_0_2.Query
	4, // 6: protoqueryservice_rc_0_2.QueryService.BeginView:input_type -> protoqueryservice_rc_0_2.ViewParameters
	1, // 7: protoqueryservice_rc_0_2.QueryService.EndView:input_type -> protoqueryservice_rc_0_2.View
	8, // 8: protoqueryservice_rc_0_2.QueryService.GetPolicies:input_type -> protoqueryservice_rc_0_2.Empty
	3, // 9: protoqueryservice_rc_0_2.QueryService.GetRows:output_type -> protoqueryservice_rc_0_2.Rows
	1, // 10: protoqueryservice_rc_0_2.QueryService.BeginView:output_type -> protoqueryservice_rc_0_2.View
	1, // 11: protoqueryservice_rc_0_2.QueryService.EndView:output_type -> protoqueryservice_rc_0_2.View
	9, // 12: protoqueryservice_rc_0_2.QueryService.GetPolicies:output_type -> protoblocktx_rc_0_2.Policies
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_init() }
func file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_init() {
	if File_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto != nil {
		return
	}
	file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDesc), len(file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_goTypes,
		DependencyIndexes: file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_depIdxs,
		EnumInfos:         file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_enumTypes,
		MessageInfos:      file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_msgTypes,
	}.Build()
	File_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto = out.File
	file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_goTypes = nil
	file_platform_fabric_core_fabricx_committer_v2_protoqueryservice_query_proto_depIdxs = nil
}
